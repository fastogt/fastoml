FIND_PACKAGE(Common REQUIRED)
FIND_PACKAGE(TensorFlow REQUIRED)

SET(ML_CONFIG_GEN_PATH ${CMAKE_SOURCE_DIR}/include/fastoml/config.h)
CONFIGURE_FILE(${CMAKE_SOURCE_DIR}/src/config.h.in ${ML_CONFIG_GEN_PATH} @ONLY IMMEDIATE)

SET(ML_HEADERS
  ${CMAKE_SOURCE_DIR}/include/fastoml/parameter_meta.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/backend_meta.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/types.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/iframe.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/imodel.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/iengine.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/iprediction.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/backend.h
  ${ML_CONFIG_GEN_PATH}
)
SET(ML_SOURCES
  ${CMAKE_SOURCE_DIR}/src/backend_meta.cpp
  ${CMAKE_SOURCE_DIR}/src/parameter_meta.cpp
  ${CMAKE_SOURCE_DIR}/src/types.cpp
  ${CMAKE_SOURCE_DIR}/src/iframe.cpp
  ${CMAKE_SOURCE_DIR}/src/imodel.cpp
  ${CMAKE_SOURCE_DIR}/src/iengine.cpp
  ${CMAKE_SOURCE_DIR}/src/iprediction.cpp
  ${CMAKE_SOURCE_DIR}/src/backend.cpp
)

SET(ML_TENSORFLOW_HEADERS
  ${CMAKE_SOURCE_DIR}/include/fastoml/tensorflow/types.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/tensorflow/parameters.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/tensorflow/frame.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/tensorflow/model.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/tensorflow/engine.h
  ${CMAKE_SOURCE_DIR}/include/fastoml/tensorflow/prediction.h
)
SET(ML_TENSORFLOW_SOURCES
  ${CMAKE_SOURCE_DIR}/src/tensorflow/types.cpp
  ${CMAKE_SOURCE_DIR}/src/tensorflow/parameters.cpp
  ${CMAKE_SOURCE_DIR}/src/tensorflow/frame.cpp
  ${CMAKE_SOURCE_DIR}/src/tensorflow/model.cpp
  ${CMAKE_SOURCE_DIR}/src/tensorflow/engine.cpp
  ${CMAKE_SOURCE_DIR}/src/tensorflow/prediction.cpp
)

IF(OS_WINDOWS)
  SET(PLATFORM_HDRS ${PLATFORM_HDRS})
  SET(PLATFORM_SRCS ${PLATFORM_SRCS})
  SET(PLATFORM_LIBRARIES ${PLATFORM_LIBRARIES})
ELSEIF(OS_MACOSX)
  SET(PLATFORM_HDRS ${PLATFORM_HDRS})
  SET(PLATFORM_SRCS ${PLATFORM_SRCS})
  SET(PLATFORM_LIBRARIES ${PLATFORM_LIBRARIES})
ELSEIF(OS_LINUX)
  SET(PLATFORM_HDRS ${PLATFORM_HDRS})
  SET(PLATFORM_SRCS ${PLATFORM_SRCS})
  SET(PLATFORM_LIBRARIES ${PLATFORM_LIBRARIES})
ELSEIF(OS_FREEBSD)
  SET(PLATFORM_HDRS ${PLATFORM_HDRS})
  SET(PLATFORM_SRCS ${PLATFORM_SRCS})
  SET(PLATFORM_LIBRARIES ${PLATFORM_LIBRARIES})
ENDIF(OS_WINDOWS)

SET(ML_HEADERS ${ML_HEADERS} ${ML_TENSORFLOW_HEADERS})
SET(ML_SOURCES ${ML_SOURCES} ${ML_TENSORFLOW_SOURCES})

SET(ML_LIBRARY ${PROJECT_NAME_LOWERCASE})
SET(ML_INCLUDE_DIRECTORIES ${TENSORFLOW_INCLUDE_DIRS})
SET(ML_LIBRARY_LIBS
  ${COMMON_LIBRARIES}
  ${PLATFORM_LIBRARIES}
  ${TENSORFLOW_LIBRARIES}
)

ADD_LIBRARY(${ML_LIBRARY} ${ML_HEADERS} ${ML_SOURCES})
TARGET_INCLUDE_DIRECTORIES(${ML_LIBRARY}
  PRIVATE ${MEDIA_PRIVATE_INCLUDE_DIRECTORIES}
  PUBLIC $<BUILD_INTERFACE:${CMAKE_SOURCE_DIR}/include>
  $<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR}>
)
#SET_TARGET_PROPERTIES(${COMMON_PROJECT_NAME} PROPERTIES PUBLIC_HEADER "${COMMON_HEADERS}")
TARGET_LINK_LIBRARIES(${ML_LIBRARY} PRIVATE ${ML_LIBRARY_LIBS})

INSTALL(TARGETS ${ML_LIBRARY}
  LIBRARY DESTINATION lib
  ARCHIVE DESTINATION lib
  # PUBLIC_HEADER DESTINATION include
)
INSTALL(DIRECTORY ${CMAKE_SOURCE_DIR}/include/fastotv DESTINATION include)

IF (DEVELOPER_CHECK_STYLE)
  SET(CHECK_SOURCES_ML ${ML_HEADERS} ${ML_SOURCES})
  REGISTER_CHECK_STYLE_TARGET(check_style_ml "${CHECK_SOURCES_ML}")
ENDIF(DEVELOPER_CHECK_STYLE)

IF(DEVELOPER_ENABLE_TESTS)
  FIND_PACKAGE(GTest REQUIRED)
  ADD_DEFINITIONS(-DPROJECT_TEST_SOURCES_DIR="${CMAKE_SOURCE_DIR}/tests")

  SET(ML_TEST ml_test)
  ADD_EXECUTABLE(${ML_TEST}
    ${CMAKE_SOURCE_DIR}/tests/test_ml.cpp
  )
  TARGET_INCLUDE_DIRECTORIES(${ML_TEST} PRIVATE
    ${CMAKE_SOURCE_DIR}/include
    ${COMMON_INCLUDE_DIR}
  )
  TARGET_LINK_LIBRARIES(${ML_TEST} ${ML_LIBRARY} gtest gtest_main pthread png)
ENDIF(DEVELOPER_ENABLE_TESTS)
